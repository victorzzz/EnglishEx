//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.239
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EnglishExWPFClient.AccountServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AccountServiceReference.IEnglishExAccount")]
    public interface IEnglishExAccount {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnglishExAccount/Login", ReplyAction="http://tempuri.org/IEnglishExAccount/LoginResponse")]
        bool Login(string user, string password, ref string errorMessage, ref string token);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IEnglishExAccount/Login", ReplyAction="http://tempuri.org/IEnglishExAccount/LoginResponse")]
        System.IAsyncResult BeginLogin(string user, string password, ref string errorMessage, ref string token, System.AsyncCallback callback, object asyncState);
        
        bool EndLogin(ref string errorMessage, ref string token, System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IEnglishExAccountChannel : EnglishExWPFClient.AccountServiceReference.IEnglishExAccount, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public LoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string errorMessage {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        public string token {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[2]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EnglishExAccountClient : System.ServiceModel.ClientBase<EnglishExWPFClient.AccountServiceReference.IEnglishExAccount>, EnglishExWPFClient.AccountServiceReference.IEnglishExAccount {
        
        private BeginOperationDelegate onBeginLoginDelegate;
        
        private EndOperationDelegate onEndLoginDelegate;
        
        private System.Threading.SendOrPostCallback onLoginCompletedDelegate;
        
        public EnglishExAccountClient() {
        }
        
        public EnglishExAccountClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public EnglishExAccountClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EnglishExAccountClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EnglishExAccountClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<LoginCompletedEventArgs> LoginCompleted;
        
        public bool Login(string user, string password, ref string errorMessage, ref string token) {
            return base.Channel.Login(user, password, ref errorMessage, ref token);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginLogin(string user, string password, ref string errorMessage, ref string token, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginLogin(user, password, ref errorMessage, ref token, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndLogin(ref string errorMessage, ref string token, System.IAsyncResult result) {
            return base.Channel.EndLogin(ref errorMessage, ref token, result);
        }
        
        private System.IAsyncResult OnBeginLogin(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string user = ((string)(inValues[0]));
            string password = ((string)(inValues[1]));
            string errorMessage = ((string)(inValues[2]));
            string token = ((string)(inValues[3]));
            return this.BeginLogin(user, password, ref errorMessage, ref token, callback, asyncState);
        }
        
        private object[] OnEndLogin(System.IAsyncResult result) {
            string errorMessage = this.GetDefaultValueForInitialization<string>();
            string token = this.GetDefaultValueForInitialization<string>();
            bool retVal = this.EndLogin(ref errorMessage, ref token, result);
            return new object[] {
                    errorMessage,
                    token,
                    retVal};
        }
        
        private void OnLoginCompleted(object state) {
            if ((this.LoginCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.LoginCompleted(this, new LoginCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void LoginAsync(string user, string password, string errorMessage, string token) {
            this.LoginAsync(user, password, errorMessage, token, null);
        }
        
        public void LoginAsync(string user, string password, string errorMessage, string token, object userState) {
            if ((this.onBeginLoginDelegate == null)) {
                this.onBeginLoginDelegate = new BeginOperationDelegate(this.OnBeginLogin);
            }
            if ((this.onEndLoginDelegate == null)) {
                this.onEndLoginDelegate = new EndOperationDelegate(this.OnEndLogin);
            }
            if ((this.onLoginCompletedDelegate == null)) {
                this.onLoginCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLoginCompleted);
            }
            base.InvokeAsync(this.onBeginLoginDelegate, new object[] {
                        user,
                        password,
                        errorMessage,
                        token}, this.onEndLoginDelegate, this.onLoginCompletedDelegate, userState);
        }
    }
}
